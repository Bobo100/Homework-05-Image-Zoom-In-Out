{"version":3,"file":"static/css/main.7bd7d80f.css","mappings":"AAAA,KAKI,kCAAmC,CACnC,iCAAkC,CAJlC,oIADA,QCIJ,CDIE,KACE,uECDJ,CCTA,KAME,mBAJA,yBAOA,WALA,aACA,sBAGA,6BADA,uBAJA,iBAFA,kBASA,kBCVF,UAEI,8DAEA,aAHA,iBAEA,UACA,CCJJ,UACI,kBAGJ,QACI,YCLJ,MAGI,mBAFA,aACA,qBACA,CAGJ,OAII,sBAFA,aADA,WAGA","sources":["css/index.scss","css/index.css","css/App.scss","pages/component/css/Scrollbar.scss","pages/component/css/Canvas.scss","pages/css/Home.scss"],"sourcesContent":["body {\n    margin: 0;\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n      'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n      sans-serif;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  }\n  \n  code {\n    font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\n      monospace;\n  }\n  ","body {\n  margin: 0;\n  font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\", \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\ncode {\n  font-family: source-code-pro, Menlo, Monaco, Consolas, \"Courier New\", monospace;\n}/*# sourceMappingURL=index.css.map */",".App {\n  position: relative;\n  background-color: #282c34;\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  font-size: calc(10px + 2vmin);\n  color: white;\n  text-align: center;\n}\n",".vertical {\n    margin-left: 10px;\n    appearance: slider-vertical;\n    width: 10px;\n    height: 480px;\n}\n",".relative {\n    position: relative;\n}\n\n.margin {\n    margin: 10px;\n}\n\n\n// const handleMouseDown = (e: MouseEvent) => {\n//     setIsMouseDown(true);\n//     setLastMousePosition({\n//         x: e.pageX - canvasRef.current.offsetLeft,\n//         y: e.pageY - canvasRef.current.offsetTop,\n//     });\n// };\n\n// const handleMouseUp = (e: MouseEvent) => {\n//     setIsMouseDown(false);\n// };\n\n// const handleMouseMove = (e: MouseEvent) => {\n//     if (isMouseDown) {\n//         const newMousePos = {\n//             x: e.pageX - canvasRef.current.offsetLeft,\n//             y: e.pageY - canvasRef.current.offsetTop,\n//         };\n//         const newPosDiff = {\n//             x: newMousePos.x - lastMousePosition.x,\n//             y: newMousePos.y - lastMousePosition.y,\n//         }\n//         setTranslate({\n//             x: translate.x + newPosDiff.x,\n//             y: translate.y + newPosDiff.y,\n//         });\n//         setLastMousePosition(newMousePos);\n//     }\n// };\n\n// canvas.addEventListener(\"mousedown\", handleMouseDown);\n// canvas.addEventListener(\"mouseup\", handleMouseUp);\n// canvas.addEventListener(\"mousemove\", handleMouseMove);\n",".home {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n}\n\ncanvas {\n    width: 640px;\n    height: 480px;\n\n    border: 1px solid white;\n}\n"],"names":[],"sourceRoot":""}